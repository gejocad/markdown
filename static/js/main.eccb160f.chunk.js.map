{"version":3,"sources":["App.jsx","index.js"],"names":["renderer","marked","Renderer","link","href","text","Editor","props","id","value","input","onChange","Previewer","dangerouslySetInnerHTML","Window","className","heading","category","App","renderWindow","handleChange","event","setState","target","createMarkUp","__html","state","breaks","this","Component","ReactDOM","render","document","getElementById"],"mappings":"0LAkDMA,EAAW,IAAIC,IAAOC,SAC5BF,EAASG,KAAO,SAACC,EAAMC,GACrB,MAAM,WAAN,OAAkBD,EAAlB,4BAA0CC,EAA1C,SAGF,IAAMC,EAAS,SAAAC,GACb,OAAO,0BAAUC,GAAG,SAASC,MAAOF,EAAMG,MAAOC,SAAUJ,EAAMI,YAG7DC,EAAY,SAAAL,GAChB,OAAO,qBAAKC,GAAG,UAAUK,wBAAyBN,EAAMG,SAGpDI,EAAS,SAAAP,GACb,OACE,sBAAKQ,UAAU,SAAf,UACE,iCACE,6BAAKR,EAAMS,YAEZT,EAAMU,aAmDEC,E,kDA7Cb,aAAe,IAAD,8BACZ,gBAMFC,aAAe,SAACH,EAASC,GACvB,OACE,cAAC,EAAD,CACED,QAASA,EACTC,SAAUA,KAXF,EAgBdG,aAAe,SAAAC,GACb,EAAKC,SAAS,CACZZ,MAAOW,EAAME,OAAOd,SAlBV,EAsBde,aAAe,WACb,MAAO,CACLC,OAAQxB,IAAO,EAAKyB,MAAMhB,MAAO,CAC/BiB,QAAQ,EACR3B,SAAUA,MAxBd,EAAK0B,MAAQ,CACXhB,MA3EO,yqCAwEG,E,0CA+Bd,WACE,OACE,sBAAKK,UAAU,MAAf,UACGa,KAAKT,aACJ,SACA,cAAC,EAAD,CAAQR,SAAUiB,KAAKR,aAAcV,MAAOkB,KAAKF,MAAMhB,SAExDkB,KAAKT,aACJ,YACA,cAAC,EAAD,CAAWT,MAAOkB,KAAKJ,yB,GAzCfK,aCtElBC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.eccb160f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport marked from 'marked';\n\nconst DEFAULT = \n`# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.org), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbered lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![fogell](https://avatars.githubusercontent.com/u/70965051?s=400&u=4a64845f097276c9ec1afaf76883cdd9d4e0fc7a&v=4)\n`;\n\n// renderer funcion for markup\nconst renderer = new marked.Renderer()\nrenderer.link = (href, text) => {\n  return `<a href=${href} target=\"_blank\">${text}</a>`\n}\n\nconst Editor = props => {\n  return <textarea id=\"editor\" value={props.input} onChange={props.onChange} />;\n};\n\nconst Previewer = props => {\n  return <div id=\"preview\" dangerouslySetInnerHTML={props.input}/>;\n};\n\nconst Window = props => {\n  return (\n    <div className=\"window\">\n      <header>\n        <h1>{props.heading}</h1>\n      </header>\n      {props.category}\n    </div>\n  );\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: DEFAULT,\n    };\n  }\n\n  renderWindow = (heading, category) => {\n    return (\n      <Window\n        heading={heading}\n        category={category}\n      />\n    );\n  }\n\n  handleChange = event => {\n    this.setState({\n      input: event.target.value\n    });\n  }\n  \n  createMarkUp = () => {\n    return {\n      __html: marked(this.state.input, {\n        breaks: true,\n        renderer: renderer,\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        {this.renderWindow(\n          \"Editor\",\n          <Editor onChange={this.handleChange} input={this.state.input} />\n        )}\n        {this.renderWindow(\n          \"Previewer\", \n          <Previewer input={this.createMarkUp()} />)}\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}